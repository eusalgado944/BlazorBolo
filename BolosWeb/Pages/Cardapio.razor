@page "/cardapio"
@using BolosWeb.Services
@using MudBlazor
@inject HttpClient Http
 @inject RequisicaoBolo requisicaoBolo
@using BolosModel.Entities

<PageTitle>Cardápio - A&L CAKES</PageTitle>

<MudContainer MaxWidth="MaxWidth.Medium" Class="mt-4">
    <MudText Typo="Typo.h4" Class="mb-4">Cardápio de Bolos</MudText>

    <MudGrid>
        @foreach (var bolo in bolos)
        {
            <MudItem xs="12" sm="6" md="4">
                <MudCard>
                    <MudCardMedia Image="@GetImagemUrl(bolo.Id)" Height="200" />
                    <MudCardContent>
                        <MudText Typo="Typo.h6">@bolo.Nome</MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="() => MostrarDetalhes(bolo)">
                            Ver Detalhes
                        </MudButton>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        }
    </MudGrid>
</MudContainer>

@code {
    private List<Bolo> bolos = new List<Bolo>();

    protected override async Task OnInitializedAsync()
    {
        await consultarBolo();
    }

    private async Task consultarBolo()
    {
        try
        {
            var bolosList = await requisicaoBolo.BuscarBolo();
            bolos = bolosList.ToList();
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Não foi possível listar: {ex.Message}");
        }
    }
    private string GetImagemUrl(int boloId)
    {
       
        return boloId switch
        {
            
            7 => "./img/Prestigio.png",
            11 => "./img/DoceDeLeiteComAbacaxi.png",
            14 => "./img/NinhoComMorango.png",
            _ => "./img/default.png"
        };
    }
    private void MostrarDetalhes(Bolo bolo)
    {
        var parameters = new DialogParameters { ["bolo"] = bolo };
        _dialogService.Show<BoloDialog>("Detalhes do Bolo", parameters);
    }
}
